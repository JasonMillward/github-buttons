// Generated by CoffeeScript 1.6.2
(function() {
  var $, addCommas, debug, log, ucaseFirst;

  $ = jQuery;

  debug = true;

  addCommas = function(n) {
    return n.toString().replace(/(\d)(?=(\d{3})+$)/g, '$1,');
  };

  ucaseFirst = function(str) {
    return str.charAt(0).toUpperCase() + str.slice(1);
  };

  log = function(str) {
    var currentTime, e, h, m, s;

    if (debug) {
      currentTime = new Date;
      h = currentTime.getHours();
      m = currentTime.getMinutes();
      s = currentTime.getSeconds();
      try {
        return console.log("[" + h + ":" + m + ":" + s + "]\t" + str);
      } catch (_error) {
        e = _error;
      }
    }
  };

  $.fn.gitButtons = function() {
    return this.each(function() {
      var button, link, options, text, url;

      button = $(this);
      options = {
        user: button.data('user'),
        type: button.data('type'),
        repo: button.data('repo'),
        count: button.data('count')
      };
      button.addClass("github-btn-large");
      link = 'https://github.com/' + options.user;
      if (options.type === 'follow') {
        text = 'Follow @' + options.user;
        url = 'https://api.github.com/users/' + options.user;
      } else if (options.type === 'star' || options.type === 'fork') {
        text = ucaseFirst(options.type);
        url = 'https://api.github.com/repos/' + options.user + '/' + options.repo;
        link = link + '/' + options.repo;
      }
      button.append($('<a>').attr('href', link).attr('class', 'gh-btn').append($('<span>').attr('class', 'gh-ico')).append($('<span>').attr('class', 'gh-text').text(text)));
      if (options.count) {
        return $.ajax({
          type: 'GET',
          url: url,
          dataType: 'jsonp',
          success: function(data) {
            var count;

            if (typeof data.data['message'] === "undefined") {
              switch (options.type) {
                case 'follow':
                  count = data.data['followers'];
                  break;
                case 'star':
                  count = data.data['watchers'];
                  break;
                case 'fork':
                  count = data.data['forks'];
              }
              return button.append($('<a>').attr('href', link).attr('class', 'gh-count').text(addCommas(count)));
            } else {
              return log(data.data['message']);
            }
          },
          error: function(x, t, m) {}
        });
      }
    });
  };

}).call(this);
